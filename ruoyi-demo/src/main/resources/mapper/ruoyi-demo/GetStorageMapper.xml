<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mapper.GetStorageMapper">
    
    <resultMap type="GetStorage" id="GetStorageResult">
        <result property="id"    column="id"    />
        <result property="productName"    column="product_name"    />
        <result property="storageName"    column="storage_name"    />
        <result property="productNumber"    column="product_number"    />
        <result property="inventoryId"    column="inventory_id"    />
        <result property="price"    column="price"    />
    </resultMap>

    <sql id="selectGetStorageVo">
        select id, product_name, storage_name, product_number, inventory_id, price from get_storage
    </sql>

    <select id="selectGetStorageList" parameterType="GetStorage" resultMap="GetStorageResult">
        <include refid="selectGetStorageVo"/>
        <where>  
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="storageName != null  and storageName != ''"> and storage_name like concat('%', #{storageName}, '%')</if>
            <if test="productNumber != null "> and product_number = #{productNumber}</if>
            <if test="inventoryId != null "> and inventory_id = #{inventoryId}</if>
            <if test="price != null "> and price = #{price}</if>
        </where>
    </select>
    
    <select id="selectGetStorageById" parameterType="Long" resultMap="GetStorageResult">
        <include refid="selectGetStorageVo"/>
        where id = #{id}
    </select>

    <insert id="insertGetStorage" parameterType="GetStorage" useGeneratedKeys="true" keyProperty="id">
        insert into get_storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productName != null and productName != ''">product_name,</if>
            <if test="storageName != null and storageName != ''">storage_name,</if>
            <if test="productNumber != null">product_number,</if>
            <if test="inventoryId != null">inventory_id,</if>
            <if test="price != null">price,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productName != null and productName != ''">#{productName},</if>
            <if test="storageName != null and storageName != ''">#{storageName},</if>
            <if test="productNumber != null">#{productNumber},</if>
            <if test="inventoryId != null">#{inventoryId},</if>
            <if test="price != null">#{price},</if>
         </trim>
    </insert>

    <update id="updateGetStorage" parameterType="GetStorage">
        update get_storage
        <trim prefix="SET" suffixOverrides=",">
            <if test="productName != null and productName != ''">product_name = #{productName},</if>
            <if test="storageName != null and storageName != ''">storage_name = #{storageName},</if>
            <if test="productNumber != null">product_number = #{productNumber},</if>
            <if test="inventoryId != null">inventory_id = #{inventoryId},</if>
            <if test="price != null">price = #{price},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteGetStorageById" parameterType="Long">
        delete from get_storage where id = #{id}
    </delete>

    <delete id="deleteGetStorageByIds" parameterType="String">
        delete from get_storage where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>